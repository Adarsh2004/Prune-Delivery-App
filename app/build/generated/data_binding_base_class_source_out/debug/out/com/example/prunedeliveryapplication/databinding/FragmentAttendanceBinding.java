// Generated by view binder compiler. Do not edit!
package com.example.prunedeliveryapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.prunedeliveryapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAttendanceBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView ImageBttn;

  @NonNull
  public final TextView attendance;

  @NonNull
  public final TextView dateText;

  @NonNull
  public final ImageView imageLoginTime;

  @NonNull
  public final ImageView imageOfflineTime;

  @NonNull
  public final ImageView imageOrderDeliver;

  @NonNull
  public final ImageView imageOrderReject;

  @NonNull
  public final ImageView imagePendingOrder;

  @NonNull
  public final ImageView imageTotalTime;

  @NonNull
  public final TextView subtextOrderReject;

  @NonNull
  public final TextView subtextPendingOrder;

  @NonNull
  public final TextView textLoginTime;

  @NonNull
  public final TextView textOfflineTime;

  @NonNull
  public final TextView textOrderDeliver;

  @NonNull
  public final TextView textOrderReject;

  @NonNull
  public final TextView textPendingOrder;

  @NonNull
  public final TextView textTotalTime;

  @NonNull
  public final View view1;

  @NonNull
  public final View view2;

  @NonNull
  public final View view3;

  @NonNull
  public final View view4;

  @NonNull
  public final View view5;

  @NonNull
  public final View view6;

  private FragmentAttendanceBinding(@NonNull RelativeLayout rootView, @NonNull ImageView ImageBttn,
      @NonNull TextView attendance, @NonNull TextView dateText, @NonNull ImageView imageLoginTime,
      @NonNull ImageView imageOfflineTime, @NonNull ImageView imageOrderDeliver,
      @NonNull ImageView imageOrderReject, @NonNull ImageView imagePendingOrder,
      @NonNull ImageView imageTotalTime, @NonNull TextView subtextOrderReject,
      @NonNull TextView subtextPendingOrder, @NonNull TextView textLoginTime,
      @NonNull TextView textOfflineTime, @NonNull TextView textOrderDeliver,
      @NonNull TextView textOrderReject, @NonNull TextView textPendingOrder,
      @NonNull TextView textTotalTime, @NonNull View view1, @NonNull View view2,
      @NonNull View view3, @NonNull View view4, @NonNull View view5, @NonNull View view6) {
    this.rootView = rootView;
    this.ImageBttn = ImageBttn;
    this.attendance = attendance;
    this.dateText = dateText;
    this.imageLoginTime = imageLoginTime;
    this.imageOfflineTime = imageOfflineTime;
    this.imageOrderDeliver = imageOrderDeliver;
    this.imageOrderReject = imageOrderReject;
    this.imagePendingOrder = imagePendingOrder;
    this.imageTotalTime = imageTotalTime;
    this.subtextOrderReject = subtextOrderReject;
    this.subtextPendingOrder = subtextPendingOrder;
    this.textLoginTime = textLoginTime;
    this.textOfflineTime = textOfflineTime;
    this.textOrderDeliver = textOrderDeliver;
    this.textOrderReject = textOrderReject;
    this.textPendingOrder = textPendingOrder;
    this.textTotalTime = textTotalTime;
    this.view1 = view1;
    this.view2 = view2;
    this.view3 = view3;
    this.view4 = view4;
    this.view5 = view5;
    this.view6 = view6;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAttendanceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAttendanceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_attendance, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAttendanceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ImageBttn;
      ImageView ImageBttn = ViewBindings.findChildViewById(rootView, id);
      if (ImageBttn == null) {
        break missingId;
      }

      id = R.id.attendance;
      TextView attendance = ViewBindings.findChildViewById(rootView, id);
      if (attendance == null) {
        break missingId;
      }

      id = R.id.dateText;
      TextView dateText = ViewBindings.findChildViewById(rootView, id);
      if (dateText == null) {
        break missingId;
      }

      id = R.id.image_login_time;
      ImageView imageLoginTime = ViewBindings.findChildViewById(rootView, id);
      if (imageLoginTime == null) {
        break missingId;
      }

      id = R.id.image_offline_time;
      ImageView imageOfflineTime = ViewBindings.findChildViewById(rootView, id);
      if (imageOfflineTime == null) {
        break missingId;
      }

      id = R.id.image_order_deliver;
      ImageView imageOrderDeliver = ViewBindings.findChildViewById(rootView, id);
      if (imageOrderDeliver == null) {
        break missingId;
      }

      id = R.id.image_order_reject;
      ImageView imageOrderReject = ViewBindings.findChildViewById(rootView, id);
      if (imageOrderReject == null) {
        break missingId;
      }

      id = R.id.image_pending_order;
      ImageView imagePendingOrder = ViewBindings.findChildViewById(rootView, id);
      if (imagePendingOrder == null) {
        break missingId;
      }

      id = R.id.image_total_time;
      ImageView imageTotalTime = ViewBindings.findChildViewById(rootView, id);
      if (imageTotalTime == null) {
        break missingId;
      }

      id = R.id.subtext_order_reject;
      TextView subtextOrderReject = ViewBindings.findChildViewById(rootView, id);
      if (subtextOrderReject == null) {
        break missingId;
      }

      id = R.id.subtext_pending_order;
      TextView subtextPendingOrder = ViewBindings.findChildViewById(rootView, id);
      if (subtextPendingOrder == null) {
        break missingId;
      }

      id = R.id.text_login_time;
      TextView textLoginTime = ViewBindings.findChildViewById(rootView, id);
      if (textLoginTime == null) {
        break missingId;
      }

      id = R.id.text_offline_time;
      TextView textOfflineTime = ViewBindings.findChildViewById(rootView, id);
      if (textOfflineTime == null) {
        break missingId;
      }

      id = R.id.text_order_deliver;
      TextView textOrderDeliver = ViewBindings.findChildViewById(rootView, id);
      if (textOrderDeliver == null) {
        break missingId;
      }

      id = R.id.text_order_reject;
      TextView textOrderReject = ViewBindings.findChildViewById(rootView, id);
      if (textOrderReject == null) {
        break missingId;
      }

      id = R.id.text_pending_order;
      TextView textPendingOrder = ViewBindings.findChildViewById(rootView, id);
      if (textPendingOrder == null) {
        break missingId;
      }

      id = R.id.text_total_time;
      TextView textTotalTime = ViewBindings.findChildViewById(rootView, id);
      if (textTotalTime == null) {
        break missingId;
      }

      id = R.id.view1;
      View view1 = ViewBindings.findChildViewById(rootView, id);
      if (view1 == null) {
        break missingId;
      }

      id = R.id.view2;
      View view2 = ViewBindings.findChildViewById(rootView, id);
      if (view2 == null) {
        break missingId;
      }

      id = R.id.view3;
      View view3 = ViewBindings.findChildViewById(rootView, id);
      if (view3 == null) {
        break missingId;
      }

      id = R.id.view4;
      View view4 = ViewBindings.findChildViewById(rootView, id);
      if (view4 == null) {
        break missingId;
      }

      id = R.id.view5;
      View view5 = ViewBindings.findChildViewById(rootView, id);
      if (view5 == null) {
        break missingId;
      }

      id = R.id.view6;
      View view6 = ViewBindings.findChildViewById(rootView, id);
      if (view6 == null) {
        break missingId;
      }

      return new FragmentAttendanceBinding((RelativeLayout) rootView, ImageBttn, attendance,
          dateText, imageLoginTime, imageOfflineTime, imageOrderDeliver, imageOrderReject,
          imagePendingOrder, imageTotalTime, subtextOrderReject, subtextPendingOrder, textLoginTime,
          textOfflineTime, textOrderDeliver, textOrderReject, textPendingOrder, textTotalTime,
          view1, view2, view3, view4, view5, view6);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
