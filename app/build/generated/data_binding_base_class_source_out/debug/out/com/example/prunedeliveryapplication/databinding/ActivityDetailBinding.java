// Generated by view binder compiler. Do not edit!
package com.example.prunedeliveryapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.prunedeliveryapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDetailBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView AmountPaid;

  @NonNull
  public final TextView Details;

  @NonNull
  public final Button Pay;

  @NonNull
  public final TextView Status;

  @NonNull
  public final ImageView black;

  @NonNull
  public final ImageView black1;

  @NonNull
  public final ImageView black3;

  @NonNull
  public final ImageView black4;

  @NonNull
  public final TextView date;

  @NonNull
  public final TextView id;

  @NonNull
  public final TextView type;

  private ActivityDetailBinding(@NonNull LinearLayout rootView, @NonNull TextView AmountPaid,
      @NonNull TextView Details, @NonNull Button Pay, @NonNull TextView Status,
      @NonNull ImageView black, @NonNull ImageView black1, @NonNull ImageView black3,
      @NonNull ImageView black4, @NonNull TextView date, @NonNull TextView id,
      @NonNull TextView type) {
    this.rootView = rootView;
    this.AmountPaid = AmountPaid;
    this.Details = Details;
    this.Pay = Pay;
    this.Status = Status;
    this.black = black;
    this.black1 = black1;
    this.black3 = black3;
    this.black4 = black4;
    this.date = date;
    this.id = id;
    this.type = type;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Amount_Paid;
      TextView AmountPaid = ViewBindings.findChildViewById(rootView, id);
      if (AmountPaid == null) {
        break missingId;
      }

      id = R.id.Details;
      TextView Details = ViewBindings.findChildViewById(rootView, id);
      if (Details == null) {
        break missingId;
      }

      id = R.id.Pay;
      Button Pay = ViewBindings.findChildViewById(rootView, id);
      if (Pay == null) {
        break missingId;
      }

      id = R.id.Status;
      TextView Status = ViewBindings.findChildViewById(rootView, id);
      if (Status == null) {
        break missingId;
      }

      id = R.id.black;
      ImageView black = ViewBindings.findChildViewById(rootView, id);
      if (black == null) {
        break missingId;
      }

      id = R.id.black1;
      ImageView black1 = ViewBindings.findChildViewById(rootView, id);
      if (black1 == null) {
        break missingId;
      }

      id = R.id.black3;
      ImageView black3 = ViewBindings.findChildViewById(rootView, id);
      if (black3 == null) {
        break missingId;
      }

      id = R.id.black4;
      ImageView black4 = ViewBindings.findChildViewById(rootView, id);
      if (black4 == null) {
        break missingId;
      }

      id = R.id.date;
      TextView date = ViewBindings.findChildViewById(rootView, id);
      if (date == null) {
        break missingId;
      }

      id = R.id.id;
      TextView id_ = ViewBindings.findChildViewById(rootView, id);
      if (id_ == null) {
        break missingId;
      }

      id = R.id.type;
      TextView type = ViewBindings.findChildViewById(rootView, id);
      if (type == null) {
        break missingId;
      }

      return new ActivityDetailBinding((LinearLayout) rootView, AmountPaid, Details, Pay, Status,
          black, black1, black3, black4, date, id_, type);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
