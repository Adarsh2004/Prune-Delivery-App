// Generated by view binder compiler. Do not edit!
package com.example.prunedeliveryapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.prunedeliveryapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutAddressSelectBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView imgCancel;

  @NonNull
  public final RelativeLayout layoutTitle;

  @NonNull
  public final LinearLayout parentLayout;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final TextView txtScreenName;

  @NonNull
  public final View viewDevider;

  private LayoutAddressSelectBinding(@NonNull LinearLayout rootView, @NonNull ImageView imgCancel,
      @NonNull RelativeLayout layoutTitle, @NonNull LinearLayout parentLayout,
      @NonNull RecyclerView recyclerView, @NonNull TextView txtScreenName,
      @NonNull View viewDevider) {
    this.rootView = rootView;
    this.imgCancel = imgCancel;
    this.layoutTitle = layoutTitle;
    this.parentLayout = parentLayout;
    this.recyclerView = recyclerView;
    this.txtScreenName = txtScreenName;
    this.viewDevider = viewDevider;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutAddressSelectBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutAddressSelectBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_address_select, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutAddressSelectBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.img_cancel;
      ImageView imgCancel = ViewBindings.findChildViewById(rootView, id);
      if (imgCancel == null) {
        break missingId;
      }

      id = R.id.layout_title;
      RelativeLayout layoutTitle = ViewBindings.findChildViewById(rootView, id);
      if (layoutTitle == null) {
        break missingId;
      }

      LinearLayout parentLayout = (LinearLayout) rootView;

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.txt_screen_name;
      TextView txtScreenName = ViewBindings.findChildViewById(rootView, id);
      if (txtScreenName == null) {
        break missingId;
      }

      id = R.id.view_devider;
      View viewDevider = ViewBindings.findChildViewById(rootView, id);
      if (viewDevider == null) {
        break missingId;
      }

      return new LayoutAddressSelectBinding((LinearLayout) rootView, imgCancel, layoutTitle,
          parentLayout, recyclerView, txtScreenName, viewDevider);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
