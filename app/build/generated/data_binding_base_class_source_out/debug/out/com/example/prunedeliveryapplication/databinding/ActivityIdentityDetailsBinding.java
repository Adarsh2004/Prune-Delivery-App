// Generated by view binder compiler. Do not edit!
package com.example.prunedeliveryapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.prunedeliveryapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityIdentityDetailsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final CardView aadhaarCardView;

  @NonNull
  public final CardView dlCardView;

  @NonNull
  public final CardView panCardView;

  @NonNull
  public final TextView titleText;

  private ActivityIdentityDetailsBinding(@NonNull RelativeLayout rootView,
      @NonNull CardView aadhaarCardView, @NonNull CardView dlCardView,
      @NonNull CardView panCardView, @NonNull TextView titleText) {
    this.rootView = rootView;
    this.aadhaarCardView = aadhaarCardView;
    this.dlCardView = dlCardView;
    this.panCardView = panCardView;
    this.titleText = titleText;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityIdentityDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityIdentityDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_identity_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityIdentityDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.aadhaar_CardView;
      CardView aadhaarCardView = ViewBindings.findChildViewById(rootView, id);
      if (aadhaarCardView == null) {
        break missingId;
      }

      id = R.id.dl_CardView;
      CardView dlCardView = ViewBindings.findChildViewById(rootView, id);
      if (dlCardView == null) {
        break missingId;
      }

      id = R.id.pan_CardView;
      CardView panCardView = ViewBindings.findChildViewById(rootView, id);
      if (panCardView == null) {
        break missingId;
      }

      id = R.id.title_text;
      TextView titleText = ViewBindings.findChildViewById(rootView, id);
      if (titleText == null) {
        break missingId;
      }

      return new ActivityIdentityDetailsBinding((RelativeLayout) rootView, aadhaarCardView,
          dlCardView, panCardView, titleText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
