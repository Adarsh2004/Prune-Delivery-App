// Generated by view binder compiler. Do not edit!
package com.example.prunedeliveryapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.prunedeliveryapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DeliveryrowBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView Bill;

  @NonNull
  public final CardView Cardview1;

  @NonNull
  public final CardView Cardview2;

  @NonNull
  public final CardView Cardview3;

  @NonNull
  public final CardView Cardview4;

  @NonNull
  public final CardView Cardview5;

  @NonNull
  public final CardView Cardview6;

  @NonNull
  public final TextView Merchant;

  @NonNull
  public final TextView Order2TypeId;

  @NonNull
  public final LinearLayout Row6;

  @NonNull
  public final TextView TimeSlot2Id;

  @NonNull
  public final TextView billId;

  @NonNull
  public final ImageView callId;

  @NonNull
  public final CardView cardView6;

  @NonNull
  public final ImageView infoId;

  @NonNull
  public final ImageView locationId;

  @NonNull
  public final TextView locationText2;

  @NonNull
  public final TextView merchantId;

  @NonNull
  public final ImageView navigateId;

  @NonNull
  public final TextView order;

  @NonNull
  public final TextView order1Id;

  @NonNull
  public final TextView orderType;

  @NonNull
  public final ImageView rejectId;

  @NonNull
  public final LinearLayout row1;

  @NonNull
  public final ImageView rupee;

  @NonNull
  public final TextView rupeeId;

  @NonNull
  public final TextView timeSlot1;

  private DeliveryrowBinding(@NonNull CardView rootView, @NonNull TextView Bill,
      @NonNull CardView Cardview1, @NonNull CardView Cardview2, @NonNull CardView Cardview3,
      @NonNull CardView Cardview4, @NonNull CardView Cardview5, @NonNull CardView Cardview6,
      @NonNull TextView Merchant, @NonNull TextView Order2TypeId, @NonNull LinearLayout Row6,
      @NonNull TextView TimeSlot2Id, @NonNull TextView billId, @NonNull ImageView callId,
      @NonNull CardView cardView6, @NonNull ImageView infoId, @NonNull ImageView locationId,
      @NonNull TextView locationText2, @NonNull TextView merchantId, @NonNull ImageView navigateId,
      @NonNull TextView order, @NonNull TextView order1Id, @NonNull TextView orderType,
      @NonNull ImageView rejectId, @NonNull LinearLayout row1, @NonNull ImageView rupee,
      @NonNull TextView rupeeId, @NonNull TextView timeSlot1) {
    this.rootView = rootView;
    this.Bill = Bill;
    this.Cardview1 = Cardview1;
    this.Cardview2 = Cardview2;
    this.Cardview3 = Cardview3;
    this.Cardview4 = Cardview4;
    this.Cardview5 = Cardview5;
    this.Cardview6 = Cardview6;
    this.Merchant = Merchant;
    this.Order2TypeId = Order2TypeId;
    this.Row6 = Row6;
    this.TimeSlot2Id = TimeSlot2Id;
    this.billId = billId;
    this.callId = callId;
    this.cardView6 = cardView6;
    this.infoId = infoId;
    this.locationId = locationId;
    this.locationText2 = locationText2;
    this.merchantId = merchantId;
    this.navigateId = navigateId;
    this.order = order;
    this.order1Id = order1Id;
    this.orderType = orderType;
    this.rejectId = rejectId;
    this.row1 = row1;
    this.rupee = rupee;
    this.rupeeId = rupeeId;
    this.timeSlot1 = timeSlot1;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static DeliveryrowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DeliveryrowBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.deliveryrow, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DeliveryrowBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Bill;
      TextView Bill = ViewBindings.findChildViewById(rootView, id);
      if (Bill == null) {
        break missingId;
      }

      id = R.id.Cardview1;
      CardView Cardview1 = ViewBindings.findChildViewById(rootView, id);
      if (Cardview1 == null) {
        break missingId;
      }

      id = R.id.Cardview2;
      CardView Cardview2 = ViewBindings.findChildViewById(rootView, id);
      if (Cardview2 == null) {
        break missingId;
      }

      id = R.id.Cardview3;
      CardView Cardview3 = ViewBindings.findChildViewById(rootView, id);
      if (Cardview3 == null) {
        break missingId;
      }

      id = R.id.Cardview4;
      CardView Cardview4 = ViewBindings.findChildViewById(rootView, id);
      if (Cardview4 == null) {
        break missingId;
      }

      id = R.id.Cardview5;
      CardView Cardview5 = ViewBindings.findChildViewById(rootView, id);
      if (Cardview5 == null) {
        break missingId;
      }

      id = R.id.Cardview6;
      CardView Cardview6 = ViewBindings.findChildViewById(rootView, id);
      if (Cardview6 == null) {
        break missingId;
      }

      id = R.id.Merchant;
      TextView Merchant = ViewBindings.findChildViewById(rootView, id);
      if (Merchant == null) {
        break missingId;
      }

      id = R.id.Order2_Type_id;
      TextView Order2TypeId = ViewBindings.findChildViewById(rootView, id);
      if (Order2TypeId == null) {
        break missingId;
      }

      id = R.id.Row6;
      LinearLayout Row6 = ViewBindings.findChildViewById(rootView, id);
      if (Row6 == null) {
        break missingId;
      }

      id = R.id.Time_Slot2_id;
      TextView TimeSlot2Id = ViewBindings.findChildViewById(rootView, id);
      if (TimeSlot2Id == null) {
        break missingId;
      }

      id = R.id.bill_id;
      TextView billId = ViewBindings.findChildViewById(rootView, id);
      if (billId == null) {
        break missingId;
      }

      id = R.id.call_id;
      ImageView callId = ViewBindings.findChildViewById(rootView, id);
      if (callId == null) {
        break missingId;
      }

      id = R.id.cardView6;
      CardView cardView6 = ViewBindings.findChildViewById(rootView, id);
      if (cardView6 == null) {
        break missingId;
      }

      id = R.id.info_id;
      ImageView infoId = ViewBindings.findChildViewById(rootView, id);
      if (infoId == null) {
        break missingId;
      }

      id = R.id.location_id;
      ImageView locationId = ViewBindings.findChildViewById(rootView, id);
      if (locationId == null) {
        break missingId;
      }

      id = R.id.location_text2;
      TextView locationText2 = ViewBindings.findChildViewById(rootView, id);
      if (locationText2 == null) {
        break missingId;
      }

      id = R.id.merchant_id;
      TextView merchantId = ViewBindings.findChildViewById(rootView, id);
      if (merchantId == null) {
        break missingId;
      }

      id = R.id.navigate_id;
      ImageView navigateId = ViewBindings.findChildViewById(rootView, id);
      if (navigateId == null) {
        break missingId;
      }

      id = R.id.order;
      TextView order = ViewBindings.findChildViewById(rootView, id);
      if (order == null) {
        break missingId;
      }

      id = R.id.order1_id;
      TextView order1Id = ViewBindings.findChildViewById(rootView, id);
      if (order1Id == null) {
        break missingId;
      }

      id = R.id.order_Type;
      TextView orderType = ViewBindings.findChildViewById(rootView, id);
      if (orderType == null) {
        break missingId;
      }

      id = R.id.reject_id;
      ImageView rejectId = ViewBindings.findChildViewById(rootView, id);
      if (rejectId == null) {
        break missingId;
      }

      id = R.id.row1;
      LinearLayout row1 = ViewBindings.findChildViewById(rootView, id);
      if (row1 == null) {
        break missingId;
      }

      id = R.id.rupee;
      ImageView rupee = ViewBindings.findChildViewById(rootView, id);
      if (rupee == null) {
        break missingId;
      }

      id = R.id.rupee_id;
      TextView rupeeId = ViewBindings.findChildViewById(rootView, id);
      if (rupeeId == null) {
        break missingId;
      }

      id = R.id.time_Slot1;
      TextView timeSlot1 = ViewBindings.findChildViewById(rootView, id);
      if (timeSlot1 == null) {
        break missingId;
      }

      return new DeliveryrowBinding((CardView) rootView, Bill, Cardview1, Cardview2, Cardview3,
          Cardview4, Cardview5, Cardview6, Merchant, Order2TypeId, Row6, TimeSlot2Id, billId,
          callId, cardView6, infoId, locationId, locationText2, merchantId, navigateId, order,
          order1Id, orderType, rejectId, row1, rupee, rupeeId, timeSlot1);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
