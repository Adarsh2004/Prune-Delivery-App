// Generated by view binder compiler. Do not edit!
package com.example.prunedeliveryapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.prunedeliveryapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityActivateSimStatusBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button activatebutt;

  @NonNull
  public final EditText addressSim;

  @NonNull
  public final EditText mobileActivate;

  @NonNull
  public final EditText planSim;

  @NonNull
  public final EditText simActivate;

  @NonNull
  public final TextView textActivateSimHead;

  @NonNull
  public final TextView textAddress;

  @NonNull
  public final TextView textMobileSim;

  @NonNull
  public final TextView textNameSim;

  @NonNull
  public final TextView textPlan;

  @NonNull
  public final TextView textSim;

  @NonNull
  public final EditText usersignSim;

  private ActivityActivateSimStatusBinding(@NonNull LinearLayout rootView,
      @NonNull Button activatebutt, @NonNull EditText addressSim, @NonNull EditText mobileActivate,
      @NonNull EditText planSim, @NonNull EditText simActivate,
      @NonNull TextView textActivateSimHead, @NonNull TextView textAddress,
      @NonNull TextView textMobileSim, @NonNull TextView textNameSim, @NonNull TextView textPlan,
      @NonNull TextView textSim, @NonNull EditText usersignSim) {
    this.rootView = rootView;
    this.activatebutt = activatebutt;
    this.addressSim = addressSim;
    this.mobileActivate = mobileActivate;
    this.planSim = planSim;
    this.simActivate = simActivate;
    this.textActivateSimHead = textActivateSimHead;
    this.textAddress = textAddress;
    this.textMobileSim = textMobileSim;
    this.textNameSim = textNameSim;
    this.textPlan = textPlan;
    this.textSim = textSim;
    this.usersignSim = usersignSim;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityActivateSimStatusBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityActivateSimStatusBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_activate_sim_status, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityActivateSimStatusBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.activatebutt;
      Button activatebutt = ViewBindings.findChildViewById(rootView, id);
      if (activatebutt == null) {
        break missingId;
      }

      id = R.id.address_sim;
      EditText addressSim = ViewBindings.findChildViewById(rootView, id);
      if (addressSim == null) {
        break missingId;
      }

      id = R.id.mobile_activate;
      EditText mobileActivate = ViewBindings.findChildViewById(rootView, id);
      if (mobileActivate == null) {
        break missingId;
      }

      id = R.id.plan_sim;
      EditText planSim = ViewBindings.findChildViewById(rootView, id);
      if (planSim == null) {
        break missingId;
      }

      id = R.id.sim_activate;
      EditText simActivate = ViewBindings.findChildViewById(rootView, id);
      if (simActivate == null) {
        break missingId;
      }

      id = R.id.text_activate_sim_head;
      TextView textActivateSimHead = ViewBindings.findChildViewById(rootView, id);
      if (textActivateSimHead == null) {
        break missingId;
      }

      id = R.id.text_address;
      TextView textAddress = ViewBindings.findChildViewById(rootView, id);
      if (textAddress == null) {
        break missingId;
      }

      id = R.id.text_mobile_sim;
      TextView textMobileSim = ViewBindings.findChildViewById(rootView, id);
      if (textMobileSim == null) {
        break missingId;
      }

      id = R.id.text_name_sim;
      TextView textNameSim = ViewBindings.findChildViewById(rootView, id);
      if (textNameSim == null) {
        break missingId;
      }

      id = R.id.text_plan;
      TextView textPlan = ViewBindings.findChildViewById(rootView, id);
      if (textPlan == null) {
        break missingId;
      }

      id = R.id.text_sim;
      TextView textSim = ViewBindings.findChildViewById(rootView, id);
      if (textSim == null) {
        break missingId;
      }

      id = R.id.usersign_sim;
      EditText usersignSim = ViewBindings.findChildViewById(rootView, id);
      if (usersignSim == null) {
        break missingId;
      }

      return new ActivityActivateSimStatusBinding((LinearLayout) rootView, activatebutt, addressSim,
          mobileActivate, planSim, simActivate, textActivateSimHead, textAddress, textMobileSim,
          textNameSim, textPlan, textSim, usersignSim);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
