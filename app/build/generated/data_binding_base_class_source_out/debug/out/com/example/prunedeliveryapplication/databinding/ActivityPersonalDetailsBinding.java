// Generated by view binder compiler. Do not edit!
package com.example.prunedeliveryapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.prunedeliveryapplication.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPersonalDetailsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextInputEditText addressBlank;

  @NonNull
  public final AutoCompleteTextView autoCompleteText;

  @NonNull
  public final TextInputLayout autoCompleteText2;

  @NonNull
  public final Button butPerEdit;

  @NonNull
  public final Button butPerSubmit;

  @NonNull
  public final EditText dobBlank;

  @NonNull
  public final TextInputLayout father;

  @NonNull
  public final TextInputEditText fatherName;

  @NonNull
  public final TextInputEditText nameBlank;

  @NonNull
  public final TextView personalDetailsText;

  @NonNull
  public final TextInputEditText pincodeBlank;

  @NonNull
  public final Spinner spinnerIndianDistricts;

  @NonNull
  public final Spinner spinnerIndianStates;

  @NonNull
  public final TextInputLayout textAddressPersonal;

  @NonNull
  public final TextView textDobPersonal;

  @NonNull
  public final TextInputLayout textNamePersonal;

  @NonNull
  public final TextInputLayout textPincodePersonal;

  @NonNull
  public final TextView textviewIndianDistricts;

  @NonNull
  public final TextView textviewIndianStates;

  private ActivityPersonalDetailsBinding(@NonNull LinearLayout rootView,
      @NonNull TextInputEditText addressBlank, @NonNull AutoCompleteTextView autoCompleteText,
      @NonNull TextInputLayout autoCompleteText2, @NonNull Button butPerEdit,
      @NonNull Button butPerSubmit, @NonNull EditText dobBlank, @NonNull TextInputLayout father,
      @NonNull TextInputEditText fatherName, @NonNull TextInputEditText nameBlank,
      @NonNull TextView personalDetailsText, @NonNull TextInputEditText pincodeBlank,
      @NonNull Spinner spinnerIndianDistricts, @NonNull Spinner spinnerIndianStates,
      @NonNull TextInputLayout textAddressPersonal, @NonNull TextView textDobPersonal,
      @NonNull TextInputLayout textNamePersonal, @NonNull TextInputLayout textPincodePersonal,
      @NonNull TextView textviewIndianDistricts, @NonNull TextView textviewIndianStates) {
    this.rootView = rootView;
    this.addressBlank = addressBlank;
    this.autoCompleteText = autoCompleteText;
    this.autoCompleteText2 = autoCompleteText2;
    this.butPerEdit = butPerEdit;
    this.butPerSubmit = butPerSubmit;
    this.dobBlank = dobBlank;
    this.father = father;
    this.fatherName = fatherName;
    this.nameBlank = nameBlank;
    this.personalDetailsText = personalDetailsText;
    this.pincodeBlank = pincodeBlank;
    this.spinnerIndianDistricts = spinnerIndianDistricts;
    this.spinnerIndianStates = spinnerIndianStates;
    this.textAddressPersonal = textAddressPersonal;
    this.textDobPersonal = textDobPersonal;
    this.textNamePersonal = textNamePersonal;
    this.textPincodePersonal = textPincodePersonal;
    this.textviewIndianDistricts = textviewIndianDistricts;
    this.textviewIndianStates = textviewIndianStates;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPersonalDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPersonalDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_personal_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPersonalDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.address_blank;
      TextInputEditText addressBlank = ViewBindings.findChildViewById(rootView, id);
      if (addressBlank == null) {
        break missingId;
      }

      id = R.id.auto_complete_text;
      AutoCompleteTextView autoCompleteText = ViewBindings.findChildViewById(rootView, id);
      if (autoCompleteText == null) {
        break missingId;
      }

      id = R.id.auto_complete_text2;
      TextInputLayout autoCompleteText2 = ViewBindings.findChildViewById(rootView, id);
      if (autoCompleteText2 == null) {
        break missingId;
      }

      id = R.id.but_per_edit;
      Button butPerEdit = ViewBindings.findChildViewById(rootView, id);
      if (butPerEdit == null) {
        break missingId;
      }

      id = R.id.but_per_submit;
      Button butPerSubmit = ViewBindings.findChildViewById(rootView, id);
      if (butPerSubmit == null) {
        break missingId;
      }

      id = R.id.dob_blank;
      EditText dobBlank = ViewBindings.findChildViewById(rootView, id);
      if (dobBlank == null) {
        break missingId;
      }

      id = R.id.father;
      TextInputLayout father = ViewBindings.findChildViewById(rootView, id);
      if (father == null) {
        break missingId;
      }

      id = R.id.father_name;
      TextInputEditText fatherName = ViewBindings.findChildViewById(rootView, id);
      if (fatherName == null) {
        break missingId;
      }

      id = R.id.name_blank;
      TextInputEditText nameBlank = ViewBindings.findChildViewById(rootView, id);
      if (nameBlank == null) {
        break missingId;
      }

      id = R.id.personal_details_text;
      TextView personalDetailsText = ViewBindings.findChildViewById(rootView, id);
      if (personalDetailsText == null) {
        break missingId;
      }

      id = R.id.pincode_blank;
      TextInputEditText pincodeBlank = ViewBindings.findChildViewById(rootView, id);
      if (pincodeBlank == null) {
        break missingId;
      }

      id = R.id.spinner_indian_districts;
      Spinner spinnerIndianDistricts = ViewBindings.findChildViewById(rootView, id);
      if (spinnerIndianDistricts == null) {
        break missingId;
      }

      id = R.id.spinner_indian_states;
      Spinner spinnerIndianStates = ViewBindings.findChildViewById(rootView, id);
      if (spinnerIndianStates == null) {
        break missingId;
      }

      id = R.id.text_address_personal;
      TextInputLayout textAddressPersonal = ViewBindings.findChildViewById(rootView, id);
      if (textAddressPersonal == null) {
        break missingId;
      }

      id = R.id.text_dob_personal;
      TextView textDobPersonal = ViewBindings.findChildViewById(rootView, id);
      if (textDobPersonal == null) {
        break missingId;
      }

      id = R.id.text_name_personal;
      TextInputLayout textNamePersonal = ViewBindings.findChildViewById(rootView, id);
      if (textNamePersonal == null) {
        break missingId;
      }

      id = R.id.text_pincode_personal;
      TextInputLayout textPincodePersonal = ViewBindings.findChildViewById(rootView, id);
      if (textPincodePersonal == null) {
        break missingId;
      }

      id = R.id.textview_indian_districts;
      TextView textviewIndianDistricts = ViewBindings.findChildViewById(rootView, id);
      if (textviewIndianDistricts == null) {
        break missingId;
      }

      id = R.id.textview_indian_states;
      TextView textviewIndianStates = ViewBindings.findChildViewById(rootView, id);
      if (textviewIndianStates == null) {
        break missingId;
      }

      return new ActivityPersonalDetailsBinding((LinearLayout) rootView, addressBlank,
          autoCompleteText, autoCompleteText2, butPerEdit, butPerSubmit, dobBlank, father,
          fatherName, nameBlank, personalDetailsText, pincodeBlank, spinnerIndianDistricts,
          spinnerIndianStates, textAddressPersonal, textDobPersonal, textNamePersonal,
          textPincodePersonal, textviewIndianDistricts, textviewIndianStates);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
